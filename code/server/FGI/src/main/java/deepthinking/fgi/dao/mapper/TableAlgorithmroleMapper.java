package deepthinking.fgi.dao.mapper;

import deepthinking.fgi.domain.TableAlgorithmrole;
import deepthinking.fgi.domain.TableAlgorithmroleCriteria;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

public interface TableAlgorithmroleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableAlgorithmroleSqlProvider.class, method="countByExample")
    long countByExample(TableAlgorithmroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TableAlgorithmroleSqlProvider.class, method="deleteByExample")
    int deleteByExample(TableAlgorithmroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @Delete({
        "delete from table_algorithmrole",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @Insert({
        "insert into table_algorithmrole (ID, RoleID, ",
        "AlgorithmID, PreAlgorithmID, ",
        "Des, Remark)",
        "values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, ",
        "#{algorithmid,jdbcType=INTEGER}, #{prealgorithmid,jdbcType=INTEGER}, ",
        "#{des,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})"
    })
    @SelectKey(statement = "select LAST_INSERT_ID()",
            keyProperty = "id",
            resultType = Integer.class,
            before = false
    )
    int insert(TableAlgorithmrole record);


    @Select({
            "select",
            "max(id)",
            "from table_algorithmrole",
    })
    Integer selectMaxId();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @InsertProvider(type=TableAlgorithmroleSqlProvider.class, method="insertSelective")
    int insertSelective(TableAlgorithmrole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableAlgorithmroleSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleID", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="AlgorithmID", property="algorithmid", jdbcType=JdbcType.INTEGER),
        @Result(column="PreAlgorithmID", property="prealgorithmid", jdbcType=JdbcType.INTEGER),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<TableAlgorithmrole> selectByExample(TableAlgorithmroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ID, RoleID, AlgorithmID, PreAlgorithmID, Des, Remark",
        "from table_algorithmrole",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleID", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="AlgorithmID", property="algorithmid", jdbcType=JdbcType.INTEGER),
        @Result(column="PreAlgorithmID", property="prealgorithmid", jdbcType=JdbcType.INTEGER),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    TableAlgorithmrole selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmroleSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TableAlgorithmrole record, @Param("example") TableAlgorithmroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmroleSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TableAlgorithmrole record, @Param("example") TableAlgorithmroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmroleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TableAlgorithmrole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmrole
     *
     * @mbg.generated
     */
    @Update({
        "update table_algorithmrole",
        "set RoleID = #{roleid,jdbcType=INTEGER},",
          "AlgorithmID = #{algorithmid,jdbcType=INTEGER},",
          "PreAlgorithmID = #{prealgorithmid,jdbcType=INTEGER},",
          "Des = #{des,jdbcType=VARCHAR},",
          "Remark = #{remark,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TableAlgorithmrole record);
}