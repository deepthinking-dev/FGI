package deepthinking.fgi.dao.mapper;

import deepthinking.fgi.domain.TableGroupdata;
import deepthinking.fgi.domain.TableGroupdataCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TableGroupdataMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableGroupdataSqlProvider.class, method="countByExample")
    long countByExample(TableGroupdataCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TableGroupdataSqlProvider.class, method="deleteByExample")
    int deleteByExample(TableGroupdataCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @Delete({
        "delete from table_groupdata",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @Insert({
        "insert into table_groupdata (groupName, groupType)",
        "values (#{groupname,jdbcType=VARCHAR}, #{grouptype,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(TableGroupdata record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @InsertProvider(type=TableGroupdataSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(TableGroupdata record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableGroupdataSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="groupName", property="groupname", jdbcType=JdbcType.VARCHAR),
        @Result(column="groupType", property="grouptype", jdbcType=JdbcType.INTEGER)
    })
    List<TableGroupdata> selectByExample(TableGroupdataCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, groupName, groupType",
        "from table_groupdata",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="groupName", property="groupname", jdbcType=JdbcType.VARCHAR),
        @Result(column="groupType", property="grouptype", jdbcType=JdbcType.INTEGER)
    })
    TableGroupdata selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableGroupdataSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TableGroupdata record, @Param("example") TableGroupdataCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableGroupdataSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TableGroupdata record, @Param("example") TableGroupdataCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableGroupdataSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TableGroupdata record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_groupdata
     *
     * @mbg.generated
     */
    @Update({
        "update table_groupdata",
        "set groupName = #{groupname,jdbcType=VARCHAR},",
          "groupType = #{grouptype,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TableGroupdata record);
}