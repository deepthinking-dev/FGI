package deepthinking.fgi.dao.mapper;

import deepthinking.fgi.domain.TableAlgorithmcoordinate;
import deepthinking.fgi.domain.TableAlgorithmcoordinateCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TableAlgorithmcoordinateMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="countByExample")
    long countByExample(TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="deleteByExample")
    int deleteByExample(TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @Delete({
        "delete from table_algorithmcoordinate",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @Insert({
        "insert into table_algorithmcoordinate (id, RoleId, ",
        "CoordinateInfo)",
        "values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, ",
        "#{coordinateinfo,jdbcType=LONGVARBINARY})"
    })
    int insert(TableAlgorithmcoordinate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @InsertProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="insertSelective")
    int insertSelective(TableAlgorithmcoordinate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleId", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="CoordinateInfo", property="coordinateinfo", jdbcType=JdbcType.LONGVARBINARY)
    })
    List<TableAlgorithmcoordinate> selectByExampleWithBLOBs(TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleId", property="roleid", jdbcType=JdbcType.INTEGER)
    })
    List<TableAlgorithmcoordinate> selectByExample(TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, RoleId, CoordinateInfo",
        "from table_algorithmcoordinate",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleId", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="CoordinateInfo", property="coordinateinfo", jdbcType=JdbcType.LONGVARBINARY)
    })
    TableAlgorithmcoordinate selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TableAlgorithmcoordinate record, @Param("example") TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") TableAlgorithmcoordinate record, @Param("example") TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TableAlgorithmcoordinate record, @Param("example") TableAlgorithmcoordinateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableAlgorithmcoordinateSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TableAlgorithmcoordinate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @Update({
        "update table_algorithmcoordinate",
        "set RoleId = #{roleid,jdbcType=INTEGER},",
          "CoordinateInfo = #{coordinateinfo,jdbcType=LONGVARBINARY}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(TableAlgorithmcoordinate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcoordinate
     *
     * @mbg.generated
     */
    @Update({
        "update table_algorithmcoordinate",
        "set RoleId = #{roleid,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TableAlgorithmcoordinate record);
}