package deepthinking.fgi.dao.mapper;

import java.util.List;

import deepthinking.fgi.domain.TableInterfacerole;
import deepthinking.fgi.domain.TableInterfaceroleCriteria;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TableInterfaceroleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableInterfaceroleSqlProvider.class, method="countByExample")
    long countByExample(TableInterfaceroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TableInterfaceroleSqlProvider.class, method="deleteByExample")
    int deleteByExample(TableInterfaceroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @Delete({
        "delete from table_interfacerole",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @Insert({
        "insert into table_interfacerole (RoleID, InterfaceID, ",
        "ParametersID, PreInterfaceID, ",
        "PreParametersID, Des, ",
        "Remark)",
        "values (#{roleid,jdbcType=INTEGER}, #{interfaceid,jdbcType=VARCHAR}, ",
        "#{parametersid,jdbcType=VARCHAR}, #{preinterfaceid,jdbcType=VARCHAR}, ",
        "#{preparametersid,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(TableInterfacerole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @InsertProvider(type=TableInterfaceroleSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(TableInterfacerole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableInterfaceroleSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleID", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="InterfaceID", property="interfaceid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ParametersID", property="parametersid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PreInterfaceID", property="preinterfaceid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PreParametersID", property="preparametersid", jdbcType=JdbcType.VARCHAR),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<TableInterfacerole> selectByExample(TableInterfaceroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ID, RoleID, InterfaceID, ParametersID, PreInterfaceID, PreParametersID, Des, ",
        "Remark",
        "from table_interfacerole",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleID", property="roleid", jdbcType=JdbcType.INTEGER),
        @Result(column="InterfaceID", property="interfaceid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ParametersID", property="parametersid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PreInterfaceID", property="preinterfaceid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PreParametersID", property="preparametersid", jdbcType=JdbcType.VARCHAR),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    TableInterfacerole selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableInterfaceroleSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TableInterfacerole record, @Param("example") TableInterfaceroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableInterfaceroleSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TableInterfacerole record, @Param("example") TableInterfaceroleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableInterfaceroleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TableInterfacerole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_interfacerole
     *
     * @mbg.generated
     */
    @Update({
        "update table_interfacerole",
        "set RoleID = #{roleid,jdbcType=INTEGER},",
          "InterfaceID = #{interfaceid,jdbcType=VARCHAR},",
          "ParametersID = #{parametersid,jdbcType=VARCHAR},",
          "PreInterfaceID = #{preinterfaceid,jdbcType=VARCHAR},",
          "PreParametersID = #{preparametersid,jdbcType=VARCHAR},",
          "Des = #{des,jdbcType=VARCHAR},",
          "Remark = #{remark,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TableInterfacerole record);
}