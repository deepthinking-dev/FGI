package deepthinking.fgi.dao.mapper;

import deepthinking.fgi.domain.TableRole;
import deepthinking.fgi.domain.TableRoleCriteria;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

public interface TableRoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableRoleSqlProvider.class, method="countByExample")
    long countByExample(TableRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TableRoleSqlProvider.class, method="deleteByExample")
    int deleteByExample(TableRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @Delete({
        "delete from table_role",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @Insert({
        "insert into table_role (ID, RoleName, ",
        "Des, Remark)",
        "values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, ",
        "#{des,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})"
    })
    @SelectKey(statement = "select LAST_INSERT_ID()",
            keyProperty = "id",
            resultType = Integer.class,
            before = false
    )
    int insert(TableRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @InsertProvider(type=TableRoleSqlProvider.class, method="insertSelective")
    int insertSelective(TableRole record);

    /**
     * 批量插入
     * @param roleList  算法规则列表
     * @Author 王若山
     * @return
     */
    @InsertProvider(type=TableRoleSqlProvider.class, method="batchInsert")
    int batchInsert(@Param("list") List<TableRole> roleList);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @SelectProvider(type=TableRoleSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleName", property="rolename", jdbcType=JdbcType.VARCHAR),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<TableRole> selectByExample(TableRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ID, RoleName, Des, Remark",
        "from table_role",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="RoleName", property="rolename", jdbcType=JdbcType.VARCHAR),
        @Result(column="Des", property="des", jdbcType=JdbcType.VARCHAR),
        @Result(column="Remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    TableRole selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableRoleSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TableRole record, @Param("example") TableRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableRoleSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TableRole record, @Param("example") TableRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TableRoleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TableRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_role
     *
     * @mbg.generated
     */
    @Update({
        "update table_role",
        "set RoleName = #{rolename,jdbcType=VARCHAR},",
          "Des = #{des,jdbcType=VARCHAR},",
          "Remark = #{remark,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TableRole record);
}