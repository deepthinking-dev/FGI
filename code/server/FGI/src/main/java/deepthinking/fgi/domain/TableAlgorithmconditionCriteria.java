package deepthinking.fgi.domain;

import java.util.ArrayList;
import java.util.List;

public class TableAlgorithmconditionCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public TableAlgorithmconditionCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidIsNull() {
            addCriterion("InterfaceRoleID is null");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidIsNotNull() {
            addCriterion("InterfaceRoleID is not null");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidEqualTo(Integer value) {
            addCriterion("InterfaceRoleID =", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidNotEqualTo(Integer value) {
            addCriterion("InterfaceRoleID <>", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidGreaterThan(Integer value) {
            addCriterion("InterfaceRoleID >", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("InterfaceRoleID >=", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidLessThan(Integer value) {
            addCriterion("InterfaceRoleID <", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidLessThanOrEqualTo(Integer value) {
            addCriterion("InterfaceRoleID <=", value, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidIn(List<Integer> values) {
            addCriterion("InterfaceRoleID in", values, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidNotIn(List<Integer> values) {
            addCriterion("InterfaceRoleID not in", values, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidBetween(Integer value1, Integer value2) {
            addCriterion("InterfaceRoleID between", value1, value2, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceroleidNotBetween(Integer value1, Integer value2) {
            addCriterion("InterfaceRoleID not between", value1, value2, "interfaceroleid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidIsNull() {
            addCriterion("InterfaceParametersID is null");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidIsNotNull() {
            addCriterion("InterfaceParametersID is not null");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidEqualTo(String value) {
            addCriterion("InterfaceParametersID =", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidNotEqualTo(String value) {
            addCriterion("InterfaceParametersID <>", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidGreaterThan(String value) {
            addCriterion("InterfaceParametersID >", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidGreaterThanOrEqualTo(String value) {
            addCriterion("InterfaceParametersID >=", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidLessThan(String value) {
            addCriterion("InterfaceParametersID <", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidLessThanOrEqualTo(String value) {
            addCriterion("InterfaceParametersID <=", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidLike(String value) {
            addCriterion("InterfaceParametersID like", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidNotLike(String value) {
            addCriterion("InterfaceParametersID not like", value, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidIn(List<String> values) {
            addCriterion("InterfaceParametersID in", values, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidNotIn(List<String> values) {
            addCriterion("InterfaceParametersID not in", values, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidBetween(String value1, String value2) {
            addCriterion("InterfaceParametersID between", value1, value2, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andInterfaceparametersidNotBetween(String value1, String value2) {
            addCriterion("InterfaceParametersID not between", value1, value2, "interfaceparametersid");
            return (Criteria) this;
        }

        public Criteria andBehaviorIsNull() {
            addCriterion("Behavior is null");
            return (Criteria) this;
        }

        public Criteria andBehaviorIsNotNull() {
            addCriterion("Behavior is not null");
            return (Criteria) this;
        }

        public Criteria andBehaviorEqualTo(String value) {
            addCriterion("Behavior =", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorNotEqualTo(String value) {
            addCriterion("Behavior <>", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorGreaterThan(String value) {
            addCriterion("Behavior >", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorGreaterThanOrEqualTo(String value) {
            addCriterion("Behavior >=", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorLessThan(String value) {
            addCriterion("Behavior <", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorLessThanOrEqualTo(String value) {
            addCriterion("Behavior <=", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorLike(String value) {
            addCriterion("Behavior like", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorNotLike(String value) {
            addCriterion("Behavior not like", value, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorIn(List<String> values) {
            addCriterion("Behavior in", values, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorNotIn(List<String> values) {
            addCriterion("Behavior not in", values, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorBetween(String value1, String value2) {
            addCriterion("Behavior between", value1, value2, "behavior");
            return (Criteria) this;
        }

        public Criteria andBehaviorNotBetween(String value1, String value2) {
            addCriterion("Behavior not between", value1, value2, "behavior");
            return (Criteria) this;
        }

        public Criteria andValuesourcesIsNull() {
            addCriterion("ValueSources is null");
            return (Criteria) this;
        }

        public Criteria andValuesourcesIsNotNull() {
            addCriterion("ValueSources is not null");
            return (Criteria) this;
        }

        public Criteria andValuesourcesEqualTo(Integer value) {
            addCriterion("ValueSources =", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesNotEqualTo(Integer value) {
            addCriterion("ValueSources <>", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesGreaterThan(Integer value) {
            addCriterion("ValueSources >", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesGreaterThanOrEqualTo(Integer value) {
            addCriterion("ValueSources >=", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesLessThan(Integer value) {
            addCriterion("ValueSources <", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesLessThanOrEqualTo(Integer value) {
            addCriterion("ValueSources <=", value, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesIn(List<Integer> values) {
            addCriterion("ValueSources in", values, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesNotIn(List<Integer> values) {
            addCriterion("ValueSources not in", values, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesBetween(Integer value1, Integer value2) {
            addCriterion("ValueSources between", value1, value2, "valuesources");
            return (Criteria) this;
        }

        public Criteria andValuesourcesNotBetween(Integer value1, Integer value2) {
            addCriterion("ValueSources not between", value1, value2, "valuesources");
            return (Criteria) this;
        }

        public Criteria andExpressionIsNull() {
            addCriterion("expression is null");
            return (Criteria) this;
        }

        public Criteria andExpressionIsNotNull() {
            addCriterion("expression is not null");
            return (Criteria) this;
        }

        public Criteria andExpressionEqualTo(String value) {
            addCriterion("expression =", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionNotEqualTo(String value) {
            addCriterion("expression <>", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionGreaterThan(String value) {
            addCriterion("expression >", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionGreaterThanOrEqualTo(String value) {
            addCriterion("expression >=", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionLessThan(String value) {
            addCriterion("expression <", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionLessThanOrEqualTo(String value) {
            addCriterion("expression <=", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionLike(String value) {
            addCriterion("expression like", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionNotLike(String value) {
            addCriterion("expression not like", value, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionIn(List<String> values) {
            addCriterion("expression in", values, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionNotIn(List<String> values) {
            addCriterion("expression not in", values, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionBetween(String value1, String value2) {
            addCriterion("expression between", value1, value2, "expression");
            return (Criteria) this;
        }

        public Criteria andExpressionNotBetween(String value1, String value2) {
            addCriterion("expression not between", value1, value2, "expression");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("Remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("Remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("Remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("Remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("Remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("Remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("Remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("Remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("Remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("Remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("Remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("Remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("Remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("Remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_algorithmcondition
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}