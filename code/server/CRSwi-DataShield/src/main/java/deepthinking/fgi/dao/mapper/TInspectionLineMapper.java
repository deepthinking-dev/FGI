package deepthinking.fgi.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import deepthinking.fgi.domain.TInspectionLine;
import deepthinking.fgi.domain.TInspectionLineCriteria;

public interface TInspectionLineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @SelectProvider(type=TInspectionLineSqlProvider.class, method="countByExample")
    long countByExample(TInspectionLineCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TInspectionLineSqlProvider.class, method="deleteByExample")
    int deleteByExample(TInspectionLineCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_inspection_line",
        "where line_code = #{lineCode,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer lineCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_inspection_line (line_code, region_code, ",
        "line_name, direction, ",
        "mileage_start, mileage_end, ",
        "completion_date, operation_date, ",
        "description)",
        "values (#{lineCode,jdbcType=INTEGER}, #{regionCode,jdbcType=VARCHAR}, ",
        "#{lineName,jdbcType=VARCHAR}, #{direction,jdbcType=VARCHAR}, ",
        "#{mileageStart,jdbcType=VARCHAR}, #{mileageEnd,jdbcType=VARCHAR}, ",
        "#{completionDate,jdbcType=DATE}, #{operationDate,jdbcType=DATE}, ",
        "#{description,jdbcType=VARCHAR})"
    })
    int insert(TInspectionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @InsertProvider(type=TInspectionLineSqlProvider.class, method="insertSelective")
    int insertSelective(TInspectionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @SelectProvider(type=TInspectionLineSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="line_code", property="lineCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="region_code", property="regionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="line_name", property="lineName", jdbcType=JdbcType.VARCHAR),
        @Result(column="direction", property="direction", jdbcType=JdbcType.VARCHAR),
        @Result(column="mileage_start", property="mileageStart", jdbcType=JdbcType.VARCHAR),
        @Result(column="mileage_end", property="mileageEnd", jdbcType=JdbcType.VARCHAR),
        @Result(column="completion_date", property="completionDate", jdbcType=JdbcType.DATE),
        @Result(column="operation_date", property="operationDate", jdbcType=JdbcType.DATE),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    List<TInspectionLine> selectByExample(TInspectionLineCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "line_code, region_code, line_name, direction, mileage_start, mileage_end, completion_date, ",
        "operation_date, description",
        "from t_inspection_line",
        "where line_code = #{lineCode,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="line_code", property="lineCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="region_code", property="regionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="line_name", property="lineName", jdbcType=JdbcType.VARCHAR),
        @Result(column="direction", property="direction", jdbcType=JdbcType.VARCHAR),
        @Result(column="mileage_start", property="mileageStart", jdbcType=JdbcType.VARCHAR),
        @Result(column="mileage_end", property="mileageEnd", jdbcType=JdbcType.VARCHAR),
        @Result(column="completion_date", property="completionDate", jdbcType=JdbcType.DATE),
        @Result(column="operation_date", property="operationDate", jdbcType=JdbcType.DATE),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    TInspectionLine selectByPrimaryKey(Integer lineCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInspectionLineSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TInspectionLine record, @Param("example") TInspectionLineCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInspectionLineSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TInspectionLine record, @Param("example") TInspectionLineCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInspectionLineSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TInspectionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_inspection_line
     *
     * @mbg.generated
     */
    @Update({
        "update t_inspection_line",
        "set region_code = #{regionCode,jdbcType=VARCHAR},",
          "line_name = #{lineName,jdbcType=VARCHAR},",
          "direction = #{direction,jdbcType=VARCHAR},",
          "mileage_start = #{mileageStart,jdbcType=VARCHAR},",
          "mileage_end = #{mileageEnd,jdbcType=VARCHAR},",
          "completion_date = #{completionDate,jdbcType=DATE},",
          "operation_date = #{operationDate,jdbcType=DATE},",
          "description = #{description,jdbcType=VARCHAR}",
        "where line_code = #{lineCode,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TInspectionLine record);
}