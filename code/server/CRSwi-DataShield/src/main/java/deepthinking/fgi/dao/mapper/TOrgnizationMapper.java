package deepthinking.fgi.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import deepthinking.fgi.domain.TOrgnization;
import deepthinking.fgi.domain.TOrgnizationCriteria;
import deepthinking.fgi.dto.frontend.OrgnizationQryCriteria;

public interface TOrgnizationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @SelectProvider(type=TOrgnizationSqlProvider.class, method="countByExample")
    long countByExample(TOrgnizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TOrgnizationSqlProvider.class, method="deleteByExample")
    int deleteByExample(TOrgnizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_orgnization",
        "where orgnization_code = #{orgnizationCode,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer orgnizationCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_orgnization (orgnization_code, orgnization_name, ",
        "orgnization_director, orgnization_degree)",
        "values (#{orgnizationCode,jdbcType=INTEGER}, #{orgnizationName,jdbcType=VARCHAR}, ",
        "#{orgnizationDirector,jdbcType=VARCHAR}, #{orgnizationDegree,jdbcType=VARCHAR})"
    })
    int insert(TOrgnization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @InsertProvider(type=TOrgnizationSqlProvider.class, method="insertSelective")
    int insertSelective(TOrgnization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @SelectProvider(type=TOrgnizationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orgnization_code", property="orgnizationCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orgnization_name", property="orgnizationName", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_director", property="orgnizationDirector", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_degree", property="orgnizationDegree", jdbcType=JdbcType.VARCHAR)
    })
    List<TOrgnization> selectByExample(TOrgnizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "orgnization_code, orgnization_name, orgnization_director, orgnization_degree",
        "from t_orgnization",
        "where orgnization_code = #{orgnizationCode,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="orgnization_code", property="orgnizationCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orgnization_name", property="orgnizationName", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_director", property="orgnizationDirector", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_degree", property="orgnizationDegree", jdbcType=JdbcType.VARCHAR)
    })
    TOrgnization selectByPrimaryKey(Integer orgnizationCode);

    @SelectProvider(type=TOrgnizationSqlProvider.class, method="selectAllOrgnizations")
    @Results({
        @Result(column="orgnization_code", property="orgnizationCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orgnization_name", property="orgnizationName", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_director", property="orgnizationDirector", jdbcType=JdbcType.VARCHAR),
        @Result(column="orgnization_degree", property="orgnizationDegree", jdbcType=JdbcType.VARCHAR)
    })
    
    List<TOrgnization> selectAllOrgnizations(OrgnizationQryCriteria queryParams);
    
    @SelectProvider(type=TOrgnizationSqlProvider.class, method="checkOrgnizationName")
    @Results({
        @Result(column="orgnization_code", property="orgnizationCode", jdbcType=JdbcType.INTEGER, id=true)
    })
    
    List<Integer> checkOrgnizationName(Object queryParams);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TOrgnizationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TOrgnization record, @Param("example") TOrgnizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TOrgnizationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TOrgnization record, @Param("example") TOrgnizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TOrgnizationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TOrgnization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orgnization
     *
     * @mbg.generated
     */
    @Update({
        "update t_orgnization",
        "set orgnization_name = #{orgnizationName,jdbcType=VARCHAR},",
          "orgnization_director = #{orgnizationDirector,jdbcType=VARCHAR},",
          "orgnization_degree = #{orgnizationDegree,jdbcType=VARCHAR}",
        "where orgnization_code = #{orgnizationCode,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TOrgnization record);
}