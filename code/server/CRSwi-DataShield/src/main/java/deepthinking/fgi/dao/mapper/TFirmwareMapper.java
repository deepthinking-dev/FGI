package deepthinking.fgi.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import deepthinking.fgi.domain.TFirmware;
import deepthinking.fgi.domain.TFirmwareCriteria;

public interface TFirmwareMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @SelectProvider(type=TFirmwareSqlProvider.class, method="countByExample")
    long countByExample(TFirmwareCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TFirmwareSqlProvider.class, method="deleteByExample")
    int deleteByExample(TFirmwareCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_firmware",
        "where firmware_code = #{firmwareCode,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer firmwareCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_firmware (firmware_code, firmware_version, ",
        "firmware_size, firmware_md5, ",
        "firmware_path)",
        "values (#{firmwareCode,jdbcType=INTEGER}, #{firmwareVersion,jdbcType=VARCHAR}, ",
        "#{firmwareSize,jdbcType=DOUBLE}, #{firmwareMd5,jdbcType=VARCHAR}, ",
        "#{firmwarePath,jdbcType=VARCHAR})"
    })
    int insert(TFirmware record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @InsertProvider(type=TFirmwareSqlProvider.class, method="insertSelective")
    int insertSelective(TFirmware record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @SelectProvider(type=TFirmwareSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="firmware_code", property="firmwareCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="firmware_version", property="firmwareVersion", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_size", property="firmwareSize", jdbcType=JdbcType.DOUBLE),
        @Result(column="firmware_md5", property="firmwareMd5", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_path", property="firmwarePath", jdbcType=JdbcType.VARCHAR)
    })
    List<TFirmware> selectByExample(TFirmwareCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "firmware_code, firmware_version, firmware_size, firmware_md5, firmware_path",
        "from t_firmware",
        "where firmware_code = #{firmwareCode,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="firmware_code", property="firmwareCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="firmware_version", property="firmwareVersion", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_size", property="firmwareSize", jdbcType=JdbcType.DOUBLE),
        @Result(column="firmware_md5", property="firmwareMd5", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_path", property="firmwarePath", jdbcType=JdbcType.VARCHAR)
    })
    TFirmware selectByPrimaryKey(Integer firmwareCode);
    
    @Select({
        "select",
        "firmware_code, firmware_version, firmware_size, firmware_md5, firmware_path",
        "from t_firmware"
    })
    @Results({
        @Result(column="firmware_code", property="firmwareCode", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="firmware_version", property="firmwareVersion", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_size", property="firmwareSize", jdbcType=JdbcType.DOUBLE),
        @Result(column="firmware_md5", property="firmwareMd5", jdbcType=JdbcType.VARCHAR),
        @Result(column="firmware_path", property="firmwarePath", jdbcType=JdbcType.VARCHAR)
    })
    List<TFirmware> selectFWs(Object params);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TFirmwareSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TFirmware record, @Param("example") TFirmwareCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TFirmwareSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TFirmware record, @Param("example") TFirmwareCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TFirmwareSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TFirmware record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_firmware
     *
     * @mbg.generated
     */
    @Update({
        "update t_firmware",
        "set firmware_version = #{firmwareVersion,jdbcType=VARCHAR},",
          "firmware_size = #{firmwareSize,jdbcType=DOUBLE},",
          "firmware_md5 = #{firmwareMd5,jdbcType=VARCHAR},",
          "firmware_path = #{firmwarePath,jdbcType=VARCHAR}",
        "where firmware_code = #{firmwareCode,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TFirmware record);
}