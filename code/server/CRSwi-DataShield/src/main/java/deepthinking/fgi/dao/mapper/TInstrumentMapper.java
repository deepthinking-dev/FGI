package deepthinking.fgi.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import deepthinking.fgi.domain.TInstrument;
import deepthinking.fgi.domain.TInstrumentCriteria;
import deepthinking.fgi.dto.frontend.InstrumentQryCriteria;
import deepthinking.fgi.dto.frontend.TInstrumentDto;

public interface TInstrumentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @SelectProvider(type=TInstrumentSqlProvider.class, method="countByExample")
    long countByExample(TInstrumentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TInstrumentSqlProvider.class, method="deleteByExample")
    int deleteByExample(TInstrumentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_instrument",
        "where instrument_code = #{instrumentCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String instrumentCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_instrument (instrument_code, device_type_code, ",
        "organization_code, instrument_name, ",
        "instrument_model, device_status_code)",
        "values (#{instrumentCode,jdbcType=VARCHAR}, #{deviceTypeCode,jdbcType=VARCHAR}, ",
        "#{organizationCode,jdbcType=INTEGER}, #{instrumentName,jdbcType=VARCHAR}, ",
        "#{instrumentModel,jdbcType=VARCHAR}, #{deviceStatusCode,jdbcType=VARCHAR})"
    })
    int insert(TInstrument record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @InsertProvider(type=TInstrumentSqlProvider.class, method="insertSelective")
    int insertSelective(TInstrument record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @SelectProvider(type=TInstrumentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="instrument_code", property="instrumentCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="device_type_code", property="deviceTypeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="organization_code", property="organizationCode", jdbcType=JdbcType.INTEGER),
        @Result(column="instrument_name", property="instrumentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="instrument_model", property="instrumentModel", jdbcType=JdbcType.VARCHAR),
        @Result(column="device_status_code", property="deviceStatusCode", jdbcType=JdbcType.VARCHAR)
    })
    List<TInstrument> selectByExample(TInstrumentCriteria example);

    @SelectProvider(type=TInstrumentSqlProvider.class, method="selectAllInstruments")
    @Results({
    	@Result(column="instrument_key", property="instrumentKey", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="instrument_code", property="instrumentCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="device_type_code", property="deviceTypeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="organization_code", property="organizationCode", jdbcType=JdbcType.INTEGER),
        @Result(column="orgnization_name", property="orgnizationName", jdbcType=JdbcType.VARCHAR),
        @Result(column="instrument_name", property="instrumentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="instrument_model", property="instrumentModel", jdbcType=JdbcType.VARCHAR),
        @Result(column="device_status_code", property="deviceStatusCode", jdbcType=JdbcType.VARCHAR)
    })
    
    List<TInstrumentDto> selectAllInstruments(InstrumentQryCriteria instrumentQryCriteria);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "instrument_key,instrument_code, device_type_code, organization_code, instrument_name, instrument_model, ",
        "device_status_code",
        "from t_instrument",
        "where instrument_code = #{instrumentCode,jdbcType=VARCHAR}"
    })
    @Results({
    	@Result(column="instrument_key", property="instrumentKey", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="instrument_code", property="instrumentCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="device_type_code", property="deviceTypeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="organization_code", property="organizationCode", jdbcType=JdbcType.INTEGER),
        @Result(column="instrument_name", property="instrumentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="instrument_model", property="instrumentModel", jdbcType=JdbcType.VARCHAR),
        @Result(column="device_status_code", property="deviceStatusCode", jdbcType=JdbcType.VARCHAR)
    })
    TInstrument selectByPrimaryKey(String instrumentCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInstrumentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TInstrument record, @Param("example") TInstrumentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInstrumentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TInstrument record, @Param("example") TInstrumentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TInstrumentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TInstrument record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_instrument
     *
     * @mbg.generated
     */
    @Update({
        "update t_instrument",
        "set device_type_code = #{deviceTypeCode,jdbcType=VARCHAR},",
        "instrument_code = #{instrumentCode,jdbcType=VARCHAR}",
          "organization_code = #{organizationCode,jdbcType=INTEGER},",
          "instrument_name = #{instrumentName,jdbcType=VARCHAR},",
          "instrument_model = #{instrumentModel,jdbcType=VARCHAR},",
          "device_status_code = #{deviceStatusCode,jdbcType=VARCHAR}",
        "where instrument_key = #{instrumentKey,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TInstrument record);
}